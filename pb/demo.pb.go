// Code generated by protoc-gen-go.
// source: demo.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	demo.proto

It has these top-level messages:
	HelloRequest
	HelloReply
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloRequest struct {
	Q string `protobuf:"bytes,1,opt,name=q" json:"q,omitempty"`
	N int32  `protobuf:"varint,2,opt,name=n" json:"n,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *HelloRequest) GetN() int32 {
	if m != nil {
		return m.N
	}
	return 0
}

type HelloReply struct {
	Code int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *HelloReply) Reset()                    { *m = HelloReply{} }
func (m *HelloReply) String() string            { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()               {}
func (*HelloReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *HelloReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "pb.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "pb.HelloReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Demo service

type DemoClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...client.CallOption) (*HelloReply, error)
}

type demoClient struct {
	c           client.Client
	serviceName string
}

func NewDemoClient(serviceName string, c client.Client) DemoClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "pb"
	}
	return &demoClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *demoClient) Hello(ctx context.Context, in *HelloRequest, opts ...client.CallOption) (*HelloReply, error) {
	req := c.c.NewRequest(c.serviceName, "Demo.Hello", in)
	out := new(HelloReply)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Demo service

type DemoHandler interface {
	Hello(context.Context, *HelloRequest, *HelloReply) error
}

func RegisterDemoHandler(s server.Server, hdlr DemoHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Demo{hdlr}, opts...))
}

type Demo struct {
	DemoHandler
}

func (h *Demo) Hello(ctx context.Context, in *HelloRequest, out *HelloReply) error {
	return h.DemoHandler.Hello(ctx, in, out)
}

func init() { proto.RegisterFile("demo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x49, 0xcd, 0xcd,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0xd2, 0xe2, 0xe2, 0xf1, 0x48,
	0xcd, 0xc9, 0xc9, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xe2, 0xe1, 0x62, 0x2c, 0x94,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0x2c, 0x04, 0xf1, 0xf2, 0x24, 0x98, 0x14, 0x18, 0x35,
	0x58, 0x83, 0x18, 0xf3, 0x94, 0x8c, 0xb8, 0xb8, 0xa0, 0x6a, 0x0b, 0x72, 0x2a, 0x85, 0x84, 0xb8,
	0x58, 0x92, 0xf3, 0x53, 0x52, 0xc1, 0x8a, 0x59, 0x83, 0xc0, 0x6c, 0x21, 0x01, 0x2e, 0xe6, 0xdc,
	0xe2, 0x74, 0xb0, 0x0e, 0xce, 0x20, 0x10, 0xd3, 0xc8, 0x98, 0x8b, 0xc5, 0x25, 0x35, 0x37, 0x5f,
	0x48, 0x9b, 0x8b, 0x15, 0xac, 0x57, 0x48, 0x40, 0xaf, 0x20, 0x49, 0x0f, 0xd9, 0x4a, 0x29, 0x3e,
	0x24, 0x91, 0x82, 0x9c, 0x4a, 0x25, 0x86, 0x24, 0x36, 0xb0, 0xfb, 0x8c, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x3c, 0x86, 0x51, 0x74, 0xad, 0x00, 0x00, 0x00,
}
